[{"/Users/pknipp/Desktop/repos/react-frontend-template/src/index.js":"1","/Users/pknipp/Desktop/repos/react-frontend-template/src/App.js":"2","/Users/pknipp/Desktop/repos/tsp/src/index.js":"3","/Users/pknipp/Desktop/repos/tsp/src/App.js":"4","/Users/pknipp/Desktop/repos/tsp/src/lookup.js":"5","/Users/pknipp/Desktop/repos/tsp/src/setTowns.js":"6","/Users/pknipp/Desktop/repos/tsp/src/Line.js":"7","/Users/pknipp/Desktop/repos/tsp/src/Dot.js":"8","/Users/pknipp/Desktop/repos/traveling-salesman-3d/src/index.js":"9","/Users/pknipp/Desktop/repos/traveling-salesman-3d/src/App.js":"10","/Users/pknipp/Desktop/repos/traveling-salesman-3d/src/setTowns.js":"11","/Users/pknipp/Desktop/repos/traveling-salesman-3d/src/lookup.js":"12","/Users/pknipp/Desktop/repos/traveling-salesman-3d/src/Line.js":"13","/Users/pknipp/Desktop/repos/traveling-salesman-3d/src/Dot.js":"14"},{"size":506,"mtime":1611765216984,"results":"15","hashOfConfig":"16"},{"size":64,"mtime":1611765000156,"results":"17","hashOfConfig":"16"},{"size":506,"mtime":1611765216984,"results":"18","hashOfConfig":"19"},{"size":6978,"mtime":1613786261490,"results":"20","hashOfConfig":"19"},{"size":380,"mtime":1613569755049,"results":"21","hashOfConfig":"19"},{"size":1014,"mtime":1613786261493,"results":"22","hashOfConfig":"19"},{"size":1148,"mtime":1613786261491,"results":"23","hashOfConfig":"19"},{"size":397,"mtime":1613786261490,"results":"24","hashOfConfig":"19"},{"size":506,"mtime":1613786637000,"results":"25","hashOfConfig":"26"},{"size":8053,"mtime":1613839365887,"results":"27","hashOfConfig":"26"},{"size":1020,"mtime":1613839728978,"results":"28","hashOfConfig":"26"},{"size":408,"mtime":1613836866830,"results":"29","hashOfConfig":"26"},{"size":1274,"mtime":1613838718143,"results":"30","hashOfConfig":"26"},{"size":577,"mtime":1613837749104,"results":"31","hashOfConfig":"26"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1s2inzs",{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},"69q6l4",{"filePath":"39","messages":"40","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41","usedDeprecatedRules":"38"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"47","messages":"48","errorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49","usedDeprecatedRules":"38"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},"jp9o7j",{"filePath":"55","messages":"56","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/pknipp/Desktop/repos/react-frontend-template/src/index.js",[],"/Users/pknipp/Desktop/repos/react-frontend-template/src/App.js",[],"/Users/pknipp/Desktop/repos/tsp/src/index.js",[],["65","66"],"/Users/pknipp/Desktop/repos/tsp/src/App.js",["67","68"],"import React, { useEffect, useState } from 'react';\nimport Line from './Line';\nimport Dot from './Dot';\nimport setTowns from './setTowns';\nimport lookup from './lookup';\n\nconst App = () => {\n  const [n, setN] = useState(0);\n  const [xyzs, setXyzs] = useState([]);\n  const [interTownDistances, setInterTownDistances] = useState([[0]]);\n  const [facPerm, setFacPerm] = useState(1);\n  const [distanceMin, setDistanceMin] = useState([Infinity]);\n  const [itin, setItin] = useState([[]]);\n  const [iterPermI, setIterPermI] = useState(-1);\n  const [nextIterPermI, setNextIterPermI] = useState(0);\n  const [done, setDone] = useState(false);\n  const [start, setStart] = useState(false);\n  const [memo, setMemo] = useState([]);\n  const d = 2;\n  const nx = 1500;\n  const nyz = 600;\n  const zmin = 10;\n  const ue0 = () => {\n    if (!n) return;\n    let newFacPerm = 1;\n    for(let i = 1; i <= n; i ++) newFacPerm *= i;\n    setFacPerm(newFacPerm);\n    const newXyzs = setTowns(n, nx, nyz, zmin);\n    setInterTownDistances(lookup(newXyzs));\n    setXyzs(newXyzs);\n    setIterPermI(0);\n    setNextIterPermI(1);\n    setItin([[]]);\n    setDistanceMin([Infinity]);\n    setDone(false);\n    setStart(false);\n    setMemo([]);\n  }\n  useEffect(ue0, [n]);\n  const ue1 = () => {\n    if (!n || !start) return;\n    let newDistanceMin = [...distanceMin];\n    let newMemo = [...memo];\n    for(let iterPerm = iterPermI; iterPerm < facPerm; iterPerm ++){\n      // salesman starts at origin, which (xyzs[n][0], xyzs[n][1]) is defined to be.\n      let indexLast = n;\n      let distanceTot = 0;\n      let iter = iterPerm;\n      let rangePerm = new Array(n).fill(0).map((blah, i) => i);\n      let range = [...rangePerm];\n      let fac = facPerm;\n      let newItin = [];\n      let areSame = true;\n      for(let place = n - 1; place >= 0; place --){\n        let i = n - 1 - place;\n        fac /= (place + 1);\n        let digit = Math.floor(iter/fac);\n        let index = range.splice(digit,1)[0];\n        newItin.push(index);\n        areSame = areSame && memo[i] && memo[i][0] === index;\n        if (!areSame) memo[i] = [index, distanceTot + interTownDistances[indexLast][index]];\n        distanceTot = memo[i][1];\n        // let key = newItin.join('-');\n        // if (!(key in newMemo)) newMemo[key] = distanceTot + interTownDistances[indexLast][index];\n        // distanceTot = newMemo[key];\n        iter -= digit * fac;\n        indexLast = index;\n      }\n      // salesman ends at the origin, which (xys[n][0], xys[n][1]) is defined to be.\n      distanceTot += interTownDistances[indexLast][n];\n      newItin.unshift(n);\n      newItin.push(n);\n      // console.log(newItin);\n      if(distanceTot < newDistanceMin[0]) {\n        setItin([newItin, ...itin]);\n        setDistanceMin([distanceTot, ...newDistanceMin]);\n        setNextIterPermI(iterPerm + 1);\n        setMemo(newMemo);\n        break;\n      }\n      if (iterPerm === facPerm - 1) setDone(true);\n    }\n  }\n  useEffect(ue1, [iterPermI, interTownDistances, distanceMin, facPerm, itin, start]);\n  const ue2 = () => {\n    if (!n || !start) return;\n    setIterPermI(nextIterPermI);\n  }\n  useEffect(ue2, [distanceMin, n, nextIterPermI, start])\n  const ue3 = () => {\n    console.log(\"done!\");\n  }\n  useEffect(ue3, [done]);\n  return (\n    <>\n      <div className=\"top\">\n        <p align=\"center\"><h1>Traveling Salesman Problem</h1></p>\n        <p>\n          In this classical computing problem, a regional salesman plans a route which enables him/her to leave home in order to visit all <i>N</i> towns in the region while traveling the shortest possible distance.  The time complexity for my brute-force algorithm is \"factorial\" [<i>O</i>(<i>N</i>!)], which means that the  time required to do it for 10 towns will be 10 times longer than that for 9 towns, and the time required for 11 towns will be 11 times longer than that for 10, etc.  The algorithm is seemingly instantaneous for <i>N</i> &lt; 9 and usually stalls for <i>N</i> &gt; 11.\n        </p>\n      </div>\n      <div className=\"container\">\n        <div className=\"left\">\n          <div>Select the<br/> number<br/> of towns:</div>\n          <input type=\"number\" min=\"0\" step=\"1\" value={n}\n            onChange={e => setN(Number(e.target.value))}\n          /><br/>\n          {!n ? null :\n            <>\n            {done ? <>Finished!<br/><br/></> : null}\n            <>\n              <button onClick={() => {\n                let newStart = !start;\n                setStart(newStart);\n              }}>\n                {start ? \"Cancel\" : \"Start\"}\n              </button>\n              {!start ? null :\n                <>\n                  <div>Number<br/>of routes<br/> checked:</div>\n                  <div>{(iterPermI + 1).toLocaleString()}</div><br/>\n                  <div>Percentage<br/> completed:</div>\n                  <div>{Math.round(100 * iterPermI/facPerm)}</div><br/>\n                  Successive<br/>\n                  minimum<br/>\n                  distances<br/>\n                  found:<br/><br/>\n                  {[...distanceMin].reverse().filter((distanceMin, index) => index).map(distanceMin=> {\n                    return <div>{distanceMin.toFixed(1)}</div>\n                  })}\n                </>\n              }\n            </>\n            </>\n          }\n        </div>\n\n        <div className=\"right\">\n          {/* {itin.map((itin, index) => {\n            return itin.map((townIndex, itinIndex) => {\n              return (itinIndex === itin.length - 1) ? null :\n                <Line key={itinIndex} index={index}\n                  xi={xys[townIndex][0]} xf={xys[itin[itinIndex + 1]][0]}\n                  yi={xys[townIndex][1]} yf={xys[itin[itinIndex + 1]][1]}\n                />\n            })\n          })} */}\n          {xyzs.map((xyz, index) => (\n            <Dot key={index} x={xyz[0]} y={xyz[1]} z={xyz[2]} index={index} d={d} d={d} nx={nx} nyz={nyz} />\n          ))}\n          {!start ? null : itin[0].map((townIndex, itinIndex) => {\n            return (itinIndex === itin[0].length - 1) ? null :\n                <>\n                <Line key2={itinIndex} key={'top' + townIndex + ' ' + itin[0][itinIndex + 1]}\n                  done={done} d={d} which={true} nx={nx} nyz={nyz}\n                  xi={xyzs[townIndex][0]} xf={xyzs[itin[0][itinIndex + 1]][0]}\n                  yi={xyzs[townIndex][1]} yf={xyzs[itin[0][itinIndex + 1]][1]}\n                  zi={xyzs[townIndex][2]} zf={xyzs[itin[0][itinIndex + 1]][2]}\n                />\n                <Line key2={itinIndex} key={'bot' + townIndex + ' ' + itin[0][itinIndex + 1]}\n                  done={done} d={d} which={false} nx={nx} nyz={nyz} zmin ={zmin}\n                  xi={xyzs[townIndex][0]} xf={xyzs[itin[0][itinIndex + 1]][0]}\n                  yi={xyzs[townIndex][1]} yf={xyzs[itin[0][itinIndex + 1]][1]}\n                  zi={xyzs[townIndex][2]} zf={xyzs[itin[0][itinIndex + 1]][2]}\n                />\n                </>\n          })}\n        </div>\n      </div>\n    </>\n  );\n};\nexport default App;\n","/Users/pknipp/Desktop/repos/tsp/src/lookup.js",[],["69","70"],"/Users/pknipp/Desktop/repos/tsp/src/setTowns.js",[],"/Users/pknipp/Desktop/repos/tsp/src/Line.js",["71"],"import React from \"react\";\n\nconst Line = ({ xi, yi, zi, xf, yf, zf, index, done, d, which, nx, nyz }) => {\n    d = nyz * d / z;\n\n    let X = nx/2 + nyz * (x - nx/2)/z;\n    let Y = nyz/2+ nyz * (y - nyz/2)/z;\n\n\n    const styles = [\"solid\", \"dotted\", \"dashed\", \"none\"];\n    let di = d * (which ? 1 : -1);\n    let df = (d + zf / 20) * (which ? 1 : -1);\n    let offi = di / 2;\n    let offf = df / 2;\n    let doff = offf - offi;\n    // The following two lines represent the two sides of a right triangle.\n    const dx = xf - xi;\n    const dy = yf - yi;\n\n    // Pythagorean theorem\n    const r = Math.sqrt(dx * dx + dy * dy);\n    const r2= Math.sqrt(r*r - doff * doff);\n    // \"TOA\" part of \"SOHCAHTOA\"\n    let angle = Math.atan2(dy, dx);\n    const angle2= Math.atan2(doff, r2);\n    angle -= angle2;\n    return (\n        <div className=\"line\" style={{\n            width:`${r2}px`,\n            left: `${xi - r2 / 2 + (di / 2) * Math.sin(angle)}px`,\n            top: `${yi - (di / 2) * Math.cos(angle)}px`,\n            transform: `rotate(${angle * 180 / Math.PI}deg) translateX(${r2 / 2}px)`,\n        }}/>\n    )\n}\nexport default Line;\n","/Users/pknipp/Desktop/repos/tsp/src/Dot.js",[],"/Users/pknipp/Desktop/repos/traveling-salesman-3d/src/index.js",[],["72","73"],"/Users/pknipp/Desktop/repos/traveling-salesman-3d/src/App.js",["74","75","76"],"/Users/pknipp/Desktop/repos/traveling-salesman-3d/src/setTowns.js",[],"/Users/pknipp/Desktop/repos/traveling-salesman-3d/src/lookup.js",[],"/Users/pknipp/Desktop/repos/traveling-salesman-3d/src/Line.js",[],"/Users/pknipp/Desktop/repos/traveling-salesman-3d/src/Dot.js",[],{"ruleId":"77","replacedBy":"78"},{"ruleId":"79","replacedBy":"80"},{"ruleId":"81","severity":1,"message":"82","line":84,"column":18,"nodeType":"83","endLine":84,"endColumn":84,"suggestions":"84"},{"ruleId":"85","severity":1,"message":"86","line":149,"column":83,"nodeType":"87","endLine":149,"endColumn":88},{"ruleId":"77","replacedBy":"88"},{"ruleId":"79","replacedBy":"89"},{"ruleId":null,"fatal":true,"severity":2,"message":"90","line":11,"column":35},{"ruleId":"77","replacedBy":"91"},{"ruleId":"79","replacedBy":"92"},{"ruleId":"81","severity":1,"message":"82","line":85,"column":18,"nodeType":"83","endLine":85,"endColumn":84,"suggestions":"93"},{"ruleId":"85","severity":1,"message":"86","line":151,"column":83,"nodeType":"87","endLine":151,"endColumn":88},{"ruleId":"85","severity":1,"message":"86","line":152,"column":94,"nodeType":"87","endLine":152,"endColumn":99},"no-native-reassign",["94"],"no-negated-in-lhs",["95"],"react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'memo' and 'n'. Either include them or remove the dependency array.","ArrayExpression",["96"],"react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute",["94"],["95"],"Parsing error: Unexpected token, expected \",\"\n\n\u001b[0m \u001b[90m  9 | \u001b[39m\u001b[0m\n\u001b[0m \u001b[90m 10 | \u001b[39m    \u001b[36mconst\u001b[39m styles \u001b[33m=\u001b[39m [\u001b[32m\"solid\"\u001b[39m\u001b[33m,\u001b[39m \u001b[32m\"dotted\"\u001b[39m\u001b[33m,\u001b[39m \u001b[32m\"dashed\"\u001b[39m\u001b[33m,\u001b[39m \u001b[32m\"none\"\u001b[39m]\u001b[33m;\u001b[39m\u001b[0m\n\u001b[0m\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 11 | \u001b[39m    let di \u001b[33m=\u001b[39m (d \u001b[33m*\u001b[39m (which \u001b[33m?\u001b[39m \u001b[35m1\u001b[39m \u001b[33m:\u001b[39m \u001b[33m-\u001b[39m\u001b[35m1\u001b[39m)\u001b[33m;\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m    | \u001b[39m                                  \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m 12 | \u001b[39m    let df \u001b[33m=\u001b[39m (d \u001b[33m+\u001b[39m zf \u001b[33m/\u001b[39m \u001b[35m20\u001b[39m) \u001b[33m*\u001b[39m (which \u001b[33m?\u001b[39m \u001b[35m1\u001b[39m \u001b[33m:\u001b[39m \u001b[33m-\u001b[39m\u001b[35m1\u001b[39m)\u001b[33m;\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m 13 | \u001b[39m    let offi \u001b[33m=\u001b[39m di \u001b[33m/\u001b[39m \u001b[35m2\u001b[39m\u001b[33m;\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m 14 | \u001b[39m    let offf \u001b[33m=\u001b[39m df \u001b[33m/\u001b[39m \u001b[35m2\u001b[39m\u001b[33m;\u001b[39m\u001b[0m",["94"],["95"],["97"],"no-global-assign","no-unsafe-negation",{"desc":"98","fix":"99"},{"desc":"98","fix":"100"},"Update the dependencies array to be: [iterPermI, interTownDistances, distanceMin, facPerm, itin, start, n, memo]",{"range":"101","text":"102"},{"range":"103","text":"102"},[2947,3013],"[iterPermI, interTownDistances, distanceMin, facPerm, itin, start, n, memo]",[2997,3063]]